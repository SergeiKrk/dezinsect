---
import { Image } from "@astrojs/image/components";
import PageHeader from "@components/PageHeader.astro";
import config from "@config/config.json";
import Base from "@layouts/Base.astro";
import { getEntryBySlug } from "astro:content";

const entry = await getEntryBySlug("contact", "index");
const { contact_form_action } = config.params;
const contact = entry.data;
const page_data = {
  ...contact,
  content: contact.body,
};
const telegramBotToken = "6735512239:AAEaEX6NrSZWIUaY0z-B-30sJRX78-KKFAo";
const chatId = "-1002004060031";
---

<Base
  title={contact.title}
  meta_title={contact.meta_title}
  description={contact.description}
  image={contact.image}
>
  <section class="page-hero pb-6 pt-16">
    <div class="container"><PageHeader page_data={page_data} /></div>
  </section>

  <section class="section pt-0">
    <div class="container">
      <div class="row">
        <div class="mb-10 text-center md:col-6 md:order-2 md:mb-0">
          <div class="contact-img relative inline-flex pb-5 pl-5">
            <Image
              src="/images/contacts.webp"
              height={300}
              width={500}
              alt=""
            />
          </div>
        </div>
        <div class="md:col-6 md:order-1">
          <form
            class="lg:max-w-[484px]"
            action={contact_form_action}
            method="POST"
            onSubmit={async (e) => {
              e.preventDefault();
              const name = e.target.name.value;
              const email = e.target.email.value;
              const message = e.target.message.value;

              try {
                const response = await fetch(
                  `https://api.telegram.org/bot${telegramBotToken}/sendMessage`,
                  {
                    method: "POST",
                    headers: {
                      "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                      chat_id: chatId,
                      text: `New feedback from ${name} (${email}):\n${message}`,
                    }),
                  }
                );

                if (response.ok) {
                  alert("Отзыв отправлен успешно!");
                  e.target.reset();
                } else {
                  alert("Произошла ошибка при отправке отзыва.");
                }
              } catch (error) {
                console.error(error);
                alert("Произошла ошибка при отправке отзыва.");
              }
            }}
          >
            <div class="form-group mb-5">
              <label class="form-label" for="name">Your Full Name</label>
              <input
                class="form-control"
                type="text"
                id="name"
                name="name"
                placeholder="Your Full Name"
                required
              />
            </div>
            <div class="form-group mb-5">
              <label class="form-label" for="email">Your Email Address</label>
              <input
                class="form-control"
                type="email"
                id="email"
                name="email"
                placeholder="Your Email Address"
                required
              />
            </div>
            <div class="form-group mb-5">
              <label class="form-label" for="message">Message</label>
              <textarea
                class="form-control h-[150px]"
                id="message"
                name="message"
                cols="30"
                rows="10"
                required></textarea>
            </div>
            <input
              class="btn btn-primary block w-full"
              type="submit"
              value="Send Message"
            />
          </form>
        </div>
      </div>
    </div>
  </section>
</Base>
